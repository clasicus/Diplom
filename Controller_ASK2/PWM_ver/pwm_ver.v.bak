module pwm_ver
(
input wire  i_clk,      //входная частота 60 МГц,чтобы fшима = 30кГц=i_clk/Pwm_in
input wire RESET,        //Входная частота
input wire [11:0] Pwm_in,//управление Шимом 
input wire [15:0] I_max,  //максимальный ток с АЦП 
input wire [15:0] I_in,   //входной ток    
   
 
output wire   PWM_out,   	//выход ШИМ-формирователя
output reg  [11:0] Count, //выход счетчика 
output reg   DIR,
output reg   OFF  
);

wire clk;
reg d_clk;
wire t_clk;
reg t_count;
reg [11:0]Pwm_in_reg;
reg t_pwm = 1'b0;
reg PWM;

always @ (posedge clk or posedge !RESET)
	begin
		if (!RESET)  
			Pwm_in_reg <= 0;
		else if (Pwm_in[11])
			Pwm_in_reg=~Pwm_in+1;
		else 	
		   Pwm_in_reg=Pwm_in;			
	end
 //описание счетчика 
always @ (posedge clk or posedge !RESET)
	begin
		if (!RESET)  
			Count <= 0;
		else 
			Count <= Count+1;
	end
	//делим входную частоту на 2
	 always @(posedge i_clk)
    begin
      if (!RESET)
        d_clk <= 1'b0;
      else
        d_clk <= ~d_clk;
    end
	 //выбор частоты , если число порога больше, чем входной ШИМ,
	 //то i_clk, в противном случае d_clk
  assign t_clk = (Pwm_in > I_max) ? i_clk : d_clk;
  assign clk = i_clk;
  always @(posedge t_clk)
    begin
      if (!RESET)
        PWM <= 1'b0;
      else
        if (Pwm_in_reg > Count)
          PWM <= 1'b1;
        else
          PWM <= 1'b0;
       end
//	 //счетчик t_count считает импульсы с меньшей частотой
//		  always @(posedge t_clk)
//    begin
//      if (!RESET ==  1'b0)
//        t_count <= 8'b0;
//      else
//        t_count <= t_count + 1'b1;
//    end
////формируем ШИМ с импульсами с меньшей частотой
//  always @(posedge t_clk)
//    begin
//      if (!RESET == 1'b0)
//        t_pwm <= 1'b0;
//      else
//        if (Pwm_in > t_count)
//          t_pwm <= 1'b1;
//        else
//          t_pwm <= 1'b0;
//    end
// ----- t ^
 assign PWM_out = PWM;
  
endmodule
